{
  "address": "0x0902388b5e695aC9581b49B7E36DC38f921f4141",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tradeFactory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_aggregationRouter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DustSent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "GovernorAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "pendingGovernor",
          "type": "address"
        }
      ],
      "name": "PendingGovernorSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_tokenIn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_tokenOut",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_maxSlippage",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_receivedAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "Swapped",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "AGGREGATION_ROUTER_V3",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ETH_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SLIPPAGE_PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SWAPPER_TYPE",
      "outputs": [
        {
          "internalType": "enum ISwapper.SwapperType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TRADE_FACTORY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "isGovernor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_isGovernor",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingGovernor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "sendDust",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pendingGovernor",
          "type": "address"
        }
      ],
      "name": "setPendingGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxSlippage",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_receivedAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8ac59d06c37cdce0985ced27d3d8fd20fea0bb217c2e19ef62355e4138e7f4eb",
  "receipt": {
    "to": null,
    "from": "0xB82193725471dC7bfaAB1a3AB93c7b42963F3265",
    "contractAddress": "0x0902388b5e695aC9581b49B7E36DC38f921f4141",
    "transactionIndex": 5,
    "gasUsed": "1204317",
    "logsBloom": "0x
    "blockHash": "0x3aa3148dce8d1555c941456c3fde34e820705e1becadecbf02e640c7979e897f",
    "transactionHash": "0x8ac59d06c37cdce0985ced27d3d8fd20fea0bb217c2e19ef62355e4138e7f4eb",
    "logs": [
      {
        "transactionIndex": 5,
        "blockNumber": 18091115,
        "transactionHash": "0x8ac59d06c37cdce0985ced27d3d8fd20fea0bb217c2e19ef62355e4138e7f4eb",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000b82193725471dc7bfaab1a3ab93c7b42963f3265",
          "0x000000000000000000000000e77bbfd8ed65720f187efdd109e38d75eaca7385"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000ab24cc174750000000000000000000000000000000000000000000000000005757f8111892e3a40000000000000000000000000000000000000000000004b5ef4cc59ee6eac5a700000000000000000000000000000000000000000000000056acd345014b93a40000000000000000000000000000000000000000000004b5eff7ea6afe3215a7",
        "logIndex": 25,
        "blockHash": "0x3aa3148dce8d1555c941456c3fde34e820705e1becadecbf02e640c7979e897f"
      }
    ],
    "blockNumber": 18091115,
    "cumulativeGasUsed": "2027528",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xB82193725471dC7bfaAB1a3AB93c7b42963F3265",
    "0x3853fa6a2110CEF32aA49437F22319F888784B87",
    "0x11111112542D85B3EF69AE05771c2dCCff4fAa26"
  ],
  "solcInputHash": "0eb7107d651f51015c988e0c3d67565f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tradeFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_aggregationRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DustSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"GovernorAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pendingGovernor\",\"type\":\"address\"}],\"name\":\"PendingGovernorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_maxSlippage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_receivedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"Swapped\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AGGREGATION_ROUTER_V3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ETH_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SLIPPAGE_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SWAPPER_TYPE\",\"outputs\":[{\"internalType\":\"enum ISwapper.SwapperType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRADE_FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isGovernor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_isGovernor\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingGovernor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sendDust\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pendingGovernor\",\"type\":\"address\"}],\"name\":\"setPendingGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxSlippage\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_receivedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/swappers/async/OneInchAggregatorSwapper.sol\":\"OneInchAggregatorSwapper\"},\"evmVersion\":\"istanbul\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@lbertenasco/contract-utils/contracts/utils/CollectableDust.sol\":{\"content\":\"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.4;\\n\\nimport '@openzeppelin/contracts/utils/structs/EnumerableSet.sol';\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\nimport '../../interfaces/utils/ICollectableDust.sol';\\n\\nabstract\\ncontract CollectableDust is ICollectableDust {\\n  using SafeERC20 for IERC20;\\n  using EnumerableSet for EnumerableSet.AddressSet;\\n\\n  address public constant ETH_ADDRESS = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\n  EnumerableSet.AddressSet internal protocolTokens;\\n\\n  constructor() {}\\n\\n  function _addProtocolToken(address _token) internal {\\n    require(!protocolTokens.contains(_token), 'collectable-dust/token-is-part-of-the-protocol');\\n    protocolTokens.add(_token);\\n  }\\n\\n  function _removeProtocolToken(address _token) internal {\\n    require(protocolTokens.contains(_token), 'collectable-dust/token-not-part-of-the-protocol');\\n    protocolTokens.remove(_token);\\n  }\\n\\n  function _sendDust(\\n    address _to,\\n    address _token,\\n    uint256 _amount\\n  ) internal {\\n    require(_to != address(0), 'collectable-dust/cant-send-dust-to-zero-address');\\n    require(!protocolTokens.contains(_token), 'collectable-dust/token-is-part-of-the-protocol');\\n    if (_token == ETH_ADDRESS) {\\n      payable(_to).transfer(_amount);\\n    } else {\\n      IERC20(_token).safeTransfer(_to, _amount);\\n    }\\n    emit DustSent(_to, _token, _amount);\\n  }\\n}\\n\",\"keccak256\":\"0xea815f8af6516d2d83d12d5a9bd70f798b38578ed94924a2eb0943a0f93e7803\",\"license\":\"MIT\"},\"@lbertenasco/contract-utils/contracts/utils/Governable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.4;\\n\\nimport '../../interfaces/utils/IGovernable.sol';\\n\\ncontract Governable is IGovernable {\\n  address public override governor;\\n  address public override pendingGovernor;\\n\\n  constructor(address _governor) {\\n    require(_governor != address(0), 'governable/governor-should-not-be-zero-address');\\n    governor = _governor;\\n  }\\n\\n  function setPendingGovernor(address _pendingGovernor) external virtual override onlyGovernor {\\n    _setPendingGovernor(_pendingGovernor);\\n  }\\n\\n  function acceptGovernor() external virtual override onlyPendingGovernor {\\n    _acceptGovernor();\\n  }\\n\\n  function _setPendingGovernor(address _pendingGovernor) internal {\\n    require(_pendingGovernor != address(0), 'governable/pending-governor-should-not-be-zero-addres');\\n    pendingGovernor = _pendingGovernor;\\n    emit PendingGovernorSet(_pendingGovernor);\\n  }\\n\\n  function _acceptGovernor() internal {\\n    governor = pendingGovernor;\\n    pendingGovernor = address(0);\\n    emit GovernorAccepted();\\n  }\\n\\n  function isGovernor(address _account) public view override returns (bool _isGovernor) {\\n    return _account == governor;\\n  }\\n\\n  modifier onlyGovernor {\\n    require(isGovernor(msg.sender), 'governable/only-governor');\\n    _;\\n  }\\n\\n  modifier onlyPendingGovernor {\\n    require(msg.sender == pendingGovernor, 'governable/only-pending-governor');\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x793f77e9f581d63c8a6e7f64cabef9d10844fce8e7f61a39201664f194d8bdbc\",\"license\":\"MIT\"},\"@lbertenasco/contract-utils/interfaces/utils/ICollectableDust.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\ninterface ICollectableDust {\\n  event DustSent(address _to, address token, uint256 amount);\\n\\n  function sendDust(address _to, address _token, uint256 _amount) external;\\n}\\n\",\"keccak256\":\"0xbc17399974d1bf723ee94625274454ed028f209e18e2978f3531d12a5a08a10f\",\"license\":\"MIT\"},\"@lbertenasco/contract-utils/interfaces/utils/IGovernable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\ninterface IGovernable {\\n  event PendingGovernorSet(address pendingGovernor);\\n  event GovernorAccepted();\\n\\n  function setPendingGovernor(address _pendingGovernor) external;\\n  function acceptGovernor() external;\\n\\n  function governor() external view returns (address _governor);\\n  function pendingGovernor() external view returns (address _pendingGovernor);\\n\\n  function isGovernor(address _account) external view returns (bool _isGovernor);\\n}\\n\",\"keccak256\":\"0xb28881a80a14bd691ef413aea97d65a2a3d4b9a690403c57223d0f56b5656e4e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) private pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastvalue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastvalue;\\n                // Update the index for the moved value\\n                set._indexes[lastvalue] = valueIndex; // Replace lastvalue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n}\\n\",\"keccak256\":\"0x211639753e28bdca7f98618f51dca3dcd08a88b57c45050eb05fa4d0053327c3\",\"license\":\"MIT\"},\"contracts/Swapper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\\n\\nimport '@lbertenasco/contract-utils/contracts/utils/Governable.sol';\\nimport '@lbertenasco/contract-utils/contracts/utils/CollectableDust.sol';\\n\\ninterface ISwapper {\\n  enum SwapperType {\\n    ASYNC,\\n    SYNC\\n  }\\n\\n  event Swapped(\\n    address _receiver,\\n    address _tokenIn,\\n    address _tokenOut,\\n    uint256 _amountIn,\\n    uint256 _maxSlippage,\\n    uint256 _receivedAmount,\\n    bytes _data\\n  );\\n\\n  // solhint-disable-next-line func-name-mixedcase\\n  function SLIPPAGE_PRECISION() external view returns (uint256);\\n\\n  // solhint-disable-next-line func-name-mixedcase\\n  function TRADE_FACTORY() external view returns (address);\\n\\n  // solhint-disable-next-line func-name-mixedcase\\n  function SWAPPER_TYPE() external view returns (SwapperType);\\n\\n  function swap(\\n    address _receiver,\\n    address _tokenIn,\\n    address _tokenOut,\\n    uint256 _amountIn,\\n    uint256 _maxSlippage,\\n    bytes calldata _data\\n  ) external returns (uint256 _receivedAmount);\\n}\\n\\nabstract contract Swapper is ISwapper, Governable, CollectableDust {\\n  using SafeERC20 for IERC20;\\n\\n  // solhint-disable-next-line var-name-mixedcase\\n  uint256 public immutable override SLIPPAGE_PRECISION = 10000; // 1 is 0.0001%, 1_000 is 0.1%\\n\\n  // solhint-disable-next-line var-name-mixedcase\\n  address public immutable override TRADE_FACTORY;\\n\\n  constructor(address _governor, address _tradeFactory) Governable(_governor) {\\n    require(_tradeFactory != address(0), 'Swapper: zero address');\\n    TRADE_FACTORY = _tradeFactory;\\n  }\\n\\n  modifier onlyTradeFactory() {\\n    require(msg.sender == TRADE_FACTORY, 'Swapper: not trade factory');\\n    _;\\n  }\\n\\n  function _assertPreSwap(\\n    address _receiver,\\n    address _tokenIn,\\n    address _tokenOut,\\n    uint256 _amountIn,\\n    uint256 _maxSlippage\\n  ) internal pure {\\n    require(_receiver != address(0), 'Swapper: zero address');\\n    require(_tokenIn != address(0) && _tokenOut != address(0), 'Swapper: zero address');\\n    require(_amountIn > 0, 'Swapper: zero amount');\\n    require(_maxSlippage > 0, 'Swapper: zero slippage');\\n  }\\n\\n  function _executeSwap(\\n    address _receiver,\\n    address _tokenIn,\\n    address _tokenOut,\\n    uint256 _amountIn,\\n    uint256 _maxSlippage,\\n    bytes calldata _data\\n  ) internal virtual returns (uint256 _receivedAmount);\\n\\n  function swap(\\n    address _receiver,\\n    address _tokenIn,\\n    address _tokenOut,\\n    uint256 _amountIn,\\n    uint256 _maxSlippage,\\n    bytes calldata _data\\n  ) external virtual override onlyTradeFactory returns (uint256 _receivedAmount) {\\n    _assertPreSwap(_receiver, _tokenIn, _tokenOut, _amountIn, _maxSlippage);\\n    IERC20(_tokenIn).safeTransferFrom(TRADE_FACTORY, address(this), _amountIn);\\n    _receivedAmount = _executeSwap(_receiver, _tokenIn, _tokenOut, _amountIn, _maxSlippage, _data);\\n    emit Swapped(_receiver, _tokenIn, _tokenOut, _amountIn, _maxSlippage, _receivedAmount, _data);\\n  }\\n\\n  function sendDust(\\n    address _to,\\n    address _token,\\n    uint256 _amount\\n  ) external virtual override onlyGovernor {\\n    _sendDust(_to, _token, _amount);\\n  }\\n}\\n\",\"keccak256\":\"0xbe926351a8c6ed2132d4cd532e48a4a22f220cd7b185d6d0a5bc4de75a880b8c\",\"license\":\"MIT\"},\"contracts/swappers/async/OneInchAggregatorSwapper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\nimport '../../Swapper.sol';\\n\\ninterface IAggregationExecutor {\\n  function callBytes(bytes calldata data) external payable;\\n}\\n\\ninterface IOneInchExchange {\\n  struct SwapDescription {\\n    IERC20 srcToken;\\n    IERC20 dstToken;\\n    address srcReceiver;\\n    address dstReceiver;\\n    uint256 amount;\\n    uint256 minReturnAmount;\\n    uint256 flags;\\n    bytes permit;\\n  }\\n\\n  event Swapped(address sender, IERC20 srcToken, IERC20 dstToken, address dstReceiver, uint256 spentAmount, uint256 returnAmount);\\n\\n  function unoswapWithPermit(\\n    IERC20 srcToken,\\n    uint256 amount,\\n    uint256 minReturn,\\n    bytes32[] calldata pools,\\n    bytes calldata permit\\n  ) external payable returns (uint256 returnAmount);\\n\\n  function unoswap(\\n    IERC20 srcToken,\\n    uint256 amount,\\n    uint256 minReturn,\\n    bytes32[] calldata\\n  ) external payable returns (uint256 returnAmount);\\n\\n  function discountedSwap(\\n    IAggregationExecutor caller,\\n    SwapDescription calldata desc,\\n    bytes calldata data\\n  )\\n    external\\n    payable\\n    returns (\\n      uint256 returnAmount,\\n      uint256 gasLeft,\\n      uint256 chiSpent\\n    );\\n\\n  function swap(\\n    IAggregationExecutor caller,\\n    SwapDescription calldata desc,\\n    bytes calldata data\\n  ) external payable returns (uint256 returnAmount, uint256 gasLeft);\\n}\\n\\ninterface IOneInchAggregatorSwapper is ISwapper {\\n  // solhint-disable-next-line func-name-mixedcase\\n  function AGGREGATION_ROUTER_V3() external view returns (address);\\n}\\n\\ncontract OneInchAggregatorSwapper is IOneInchAggregatorSwapper, Swapper {\\n  using SafeERC20 for IERC20;\\n\\n  uint256 private constant _SHOULD_CLAIM_FLAG = 0x04;\\n\\n  // solhint-disable-next-line var-name-mixedcase\\n  SwapperType public constant override SWAPPER_TYPE = SwapperType.ASYNC;\\n\\n  // solhint-disable-next-line var-name-mixedcase\\n  address public immutable override AGGREGATION_ROUTER_V3;\\n\\n  constructor(\\n    address _governor,\\n    address _tradeFactory,\\n    address _aggregationRouter\\n  ) Swapper(_governor, _tradeFactory) {\\n    AGGREGATION_ROUTER_V3 = _aggregationRouter;\\n  }\\n\\n  function _executeSwap(\\n    address _receiver,\\n    address _tokenIn,\\n    address _tokenOut,\\n    uint256 _amountIn,\\n    uint256, // Max slippage is used off-chain\\n    bytes calldata _data\\n  ) internal override returns (uint256 _receivedAmount) {\\n    (IAggregationExecutor _caller, IOneInchExchange.SwapDescription memory _swapDescription, bytes memory _tradeData) = abi.decode(\\n      _data[4:],\\n      (IAggregationExecutor, IOneInchExchange.SwapDescription, bytes)\\n    );\\n    require(\\n      _swapDescription.dstReceiver == _receiver &&\\n        address(_swapDescription.srcToken) == _tokenIn &&\\n        address(_swapDescription.dstToken) == _tokenOut &&\\n        _swapDescription.amount == _amountIn &&\\n        _swapDescription.flags == _SHOULD_CLAIM_FLAG,\\n      'Swapper: incorrect swap information'\\n    );\\n    IERC20(_tokenIn).safeApprove(AGGREGATION_ROUTER_V3, 0);\\n    IERC20(_tokenIn).safeApprove(AGGREGATION_ROUTER_V3, _amountIn);\\n    (_receivedAmount, ) = IOneInchExchange(AGGREGATION_ROUTER_V3).swap(_caller, _swapDescription, _tradeData);\\n  }\\n}\\n\",\"keccak256\":\"0x2e64b36c6b2d1726e566e032c4a71a1bd307ec934d753c6daf9218f5dac2a2bd\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60e06040526127106080523480156200001757600080fd5b506040516200164e3803806200164e8339810160408190526200003a916200015f565b8282816001600160a01b038116620000b05760405162461bcd60e51b815260206004820152602e60248201527f676f7665726e61626c652f676f7665726e6f722d73686f756c642d6e6f742d6260448201526d652d7a65726f2d6164647265737360901b60648201526084015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392831617905581166200011c5760405162461bcd60e51b815260206004820152601560248201527f537761707065723a207a65726f206164647265737300000000000000000000006044820152606401620000a7565b6001600160601b0319606091821b811660a05292901b90911660c05250620001a8915050565b80516001600160a01b03811681146200015a57600080fd5b919050565b60008060006060848603121562000174578283fd5b6200017f8462000142565b92506200018f6020850162000142565b91506200019f6040850162000142565b90509250925092565b60805160a05160601c60c05160601c61144e620002006000396000818160ee015281816108d201528181610907015261094201526000818161015f0152818161029b01526103240152600061012a015261144e6000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063a734f06e11610071578063a734f06e14610194578063cd985af0146101af578063e3056a34146101c4578063e43581b8146101d7578063e58bb63914610209578063f235757f1461021157600080fd5b80630c340a24146100b957806316fa7bbf146100e95780632db8c12914610110578063453943f0146101255780637556fae61461015a578063a5d4096b14610181575b600080fd5b6000546100cc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100cc7f000000000000000000000000000000000000000000000000000000000000000081565b61012361011e366004611023565b610224565b005b61014c7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100e0565b6100cc7f000000000000000000000000000000000000000000000000000000000000000081565b61014c61018f366004610f6a565b61028e565b6100cc73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b6101b7600081565b6040516100e09190611334565b6001546100cc906001600160a01b031681565b6101f96101e5366004610f4e565b6000546001600160a01b0391821691161490565b60405190151581526020016100e0565b6101236103ab565b61012361021f366004610f4e565b61040f565b6000546001600160a01b0316331461027e5760405162461bcd60e51b815260206004820152601860248201527733b7bb32b93730b1363297b7b7363c96b3b7bb32b93737b960411b60448201526064015b60405180910390fd5b610289838383610470565b505050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103085760405162461bcd60e51b815260206004820152601a60248201527f537761707065723a206e6f7420747261646520666163746f72790000000000006044820152606401610275565b6103158888888888610612565b61034a6001600160a01b0388167f0000000000000000000000000000000000000000000000000000000000000000308861075b565b610359888888888888886107cc565b90507f40971433310985cab81e121610e21c884496299299bfdb99b10c0f75815c98878888888888868989604051610398989796959493929190611208565b60405180910390a1979650505050505050565b6001546001600160a01b031633146104055760405162461bcd60e51b815260206004820181905260248201527f676f7665726e61626c652f6f6e6c792d70656e64696e672d676f7665726e6f726044820152606401610275565b61040d6109dc565b565b6000546001600160a01b031633146104645760405162461bcd60e51b815260206004820152601860248201527733b7bb32b93730b1363297b7b7363c96b3b7bb32b93737b960411b6044820152606401610275565b61046d81610a2c565b50565b6001600160a01b0383166104de5760405162461bcd60e51b815260206004820152602f60248201527f636f6c6c65637461626c652d647573742f63616e742d73656e642d647573742d60448201526e746f2d7a65726f2d6164647265737360881b6064820152608401610275565b6104e9600283610af4565b1561054d5760405162461bcd60e51b815260206004820152602e60248201527f636f6c6c65637461626c652d647573742f746f6b656e2d69732d706172742d6f60448201526d198b5d1a194b5c1c9bdd1bd8dbdb60921b6064820152608401610275565b6001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156105ae576040516001600160a01b0384169082156108fc029083906000818181858888f193505050501580156105a8573d6000803e3d6000fd5b506105c2565b6105c26001600160a01b0383168483610b19565b604080516001600160a01b038086168252841660208201529081018290527f1e34c1aee8e83c2dcc14c21bb4bfeea7f46c0c998cb797ac7cc4d7a18f5c656b9060600160405180910390a1505050565b6001600160a01b0385166106605760405162461bcd60e51b8152602060048201526015602482015274537761707065723a207a65726f206164647265737360581b6044820152606401610275565b6001600160a01b0384161580159061068057506001600160a01b03831615155b6106c45760405162461bcd60e51b8152602060048201526015602482015274537761707065723a207a65726f206164647265737360581b6044820152606401610275565b6000821161070b5760405162461bcd60e51b815260206004820152601460248201527314ddd85c1c195c8e881e995c9bc8185b5bdd5b9d60621b6044820152606401610275565b600081116107545760405162461bcd60e51b8152602060048201526016602482015275537761707065723a207a65726f20736c69707061676560501b6044820152606401610275565b5050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526107c69085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610b49565b50505050565b60008080806107de8560048189611399565b8101906107eb9190611083565b9250925092508a6001600160a01b031682606001516001600160a01b031614801561082b5750896001600160a01b031682600001516001600160a01b0316145b801561084c5750886001600160a01b031682602001516001600160a01b0316145b801561085b5750878260800151145b801561086b575060048260c00151145b6108c35760405162461bcd60e51b815260206004820152602360248201527f537761707065723a20696e636f7272656374207377617020696e666f726d617460448201526234b7b760e91b6064820152608401610275565b6108f86001600160a01b038b167f00000000000000000000000000000000000000000000000000000000000000006000610c1b565b61092c6001600160a01b038b167f00000000000000000000000000000000000000000000000000000000000000008a610c1b565b604051623e012960e91b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637c0252009061097b90869086908690600401611271565b6040805180830381600087803b15801561099457600080fd5b505af11580156109a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cc919061119d565b509b9a5050505050505050505050565b60018054600080546001600160a01b03199081166001600160a01b0384161782559091169091556040517f7880f0fcc848e1f26e461654b100a69f8d0641e29aa29f6596c6afadbb36b5ea9190a1565b6001600160a01b038116610aa05760405162461bcd60e51b815260206004820152603560248201527f676f7665726e61626c652f70656e64696e672d676f7665726e6f722d73686f756044820152746c642d6e6f742d62652d7a65726f2d61646472657360581b6064820152608401610275565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f56bddfa0cee9697cebddf9acd7f23dc6583663b05e007b877056d05017994def9060200160405180910390a150565b6001600160a01b038116600090815260018301602052604081205415155b9392505050565b6040516001600160a01b03831660248201526044810182905261028990849063a9059cbb60e01b9060640161078f565b6000610b9e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610d3f9092919063ffffffff16565b8051909150156102895780806020019051810190610bbc9190611063565b6102895760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610275565b801580610ca45750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015610c6a57600080fd5b505afa158015610c7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca29190611185565b155b610d0f5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610275565b6040516001600160a01b03831660248201526044810182905261028990849063095ea7b360e01b9060640161078f565b6060610d4e8484600085610d56565b949350505050565b606082471015610db75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610275565b843b610e055760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610275565b600080866001600160a01b03168587604051610e2191906111ec565b60006040518083038185875af1925050503d8060008114610e5e576040519150601f19603f3d011682016040523d82523d6000602084013e610e63565b606091505b5091509150610e73828286610e7e565b979650505050505050565b60608315610e8d575081610b12565b825115610e9d5782518084602001fd5b8160405162461bcd60e51b8152600401610275919061135c565b8035610ec281611403565b919050565b600082601f830112610ed7578081fd5b813567ffffffffffffffff80821115610ef257610ef26113ed565b604051601f8301601f19908116603f01168101908282118183101715610f1a57610f1a6113ed565b81604052838152866020858801011115610f32578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215610f5f578081fd5b8135610b1281611403565b600080600080600080600060c0888a031215610f84578283fd5b8735610f8f81611403565b96506020880135610f9f81611403565b95506040880135610faf81611403565b9450606088013593506080880135925060a088013567ffffffffffffffff80821115610fd9578384fd5b818a0191508a601f830112610fec578384fd5b813581811115610ffa578485fd5b8b602082850101111561100b578485fd5b60208301945080935050505092959891949750929550565b600080600060608486031215611037578283fd5b833561104281611403565b9250602084013561105281611403565b929592945050506040919091013590565b600060208284031215611074578081fd5b81518015158114610b12578182fd5b600080600060608486031215611097578283fd5b83356110a281611403565b9250602084013567ffffffffffffffff808211156110be578384fd5b9085019061010082880312156110d2578384fd5b6110da61136f565b6110e383610eb7565b81526110f160208401610eb7565b602082015261110260408401610eb7565b604082015261111360608401610eb7565b60608201526080830135608082015260a083013560a082015260c083013560c082015260e083013582811115611147578586fd5b61115389828601610ec7565b60e0830152509350604086013591508082111561116e578283fd5b5061117b86828701610ec7565b9150509250925092565b600060208284031215611196578081fd5b5051919050565b600080604083850312156111af578182fd5b505080516020909101519092909150565b600081518084526111d88160208601602086016113c1565b601f01601f19169290920160200192915050565b600082516111fe8184602087016113c1565b9190910192915050565b6001600160a01b038981168252888116602083015287166040820152606081018690526080810185905260a0810184905260e060c0820181905281018290526000610100838582850137828401810191909152601f909201601f19160101979650505050505050565b6001600160a01b038481168252606060208084018290528551909216908301528301516000906112ac60808401826001600160a01b03169052565b5060408401516001600160a01b03811660a08401525060608401516001600160a01b03811660c084015250608084015160e083015260a0840151610100818185015260c086015161012085015260e0860151915080610140850152506113166101608401826111c0565b9050828103604084015261132a81856111c0565b9695505050505050565b602081016002831061135657634e487b7160e01b600052602160045260246000fd5b91905290565b602081526000610b1260208301846111c0565b604051610100810167ffffffffffffffff81118282101715611393576113936113ed565b60405290565b600080858511156113a8578182fd5b838611156113b4578182fd5b5050820193919092039150565b60005b838110156113dc5781810151838201526020016113c4565b838111156107c65750506000910152565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461046d57600080fdfea2646970667358221220922713db9a5cf9f2c62db7667a44e04555545cee04453c1fde04240781fbdceb64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063a734f06e11610071578063a734f06e14610194578063cd985af0146101af578063e3056a34146101c4578063e43581b8146101d7578063e58bb63914610209578063f235757f1461021157600080fd5b80630c340a24146100b957806316fa7bbf146100e95780632db8c12914610110578063453943f0146101255780637556fae61461015a578063a5d4096b14610181575b600080fd5b6000546100cc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100cc7f000000000000000000000000000000000000000000000000000000000000000081565b61012361011e366004611023565b610224565b005b61014c7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100e0565b6100cc7f000000000000000000000000000000000000000000000000000000000000000081565b61014c61018f366004610f6a565b61028e565b6100cc73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b6101b7600081565b6040516100e09190611334565b6001546100cc906001600160a01b031681565b6101f96101e5366004610f4e565b6000546001600160a01b0391821691161490565b60405190151581526020016100e0565b6101236103ab565b61012361021f366004610f4e565b61040f565b6000546001600160a01b0316331461027e5760405162461bcd60e51b815260206004820152601860248201527733b7bb32b93730b1363297b7b7363c96b3b7bb32b93737b960411b60448201526064015b60405180910390fd5b610289838383610470565b505050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103085760405162461bcd60e51b815260206004820152601a60248201527f537761707065723a206e6f7420747261646520666163746f72790000000000006044820152606401610275565b6103158888888888610612565b61034a6001600160a01b0388167f0000000000000000000000000000000000000000000000000000000000000000308861075b565b610359888888888888886107cc565b90507f40971433310985cab81e121610e21c884496299299bfdb99b10c0f75815c98878888888888868989604051610398989796959493929190611208565b60405180910390a1979650505050505050565b6001546001600160a01b031633146104055760405162461bcd60e51b815260206004820181905260248201527f676f7665726e61626c652f6f6e6c792d70656e64696e672d676f7665726e6f726044820152606401610275565b61040d6109dc565b565b6000546001600160a01b031633146104645760405162461bcd60e51b815260206004820152601860248201527733b7bb32b93730b1363297b7b7363c96b3b7bb32b93737b960411b6044820152606401610275565b61046d81610a2c565b50565b6001600160a01b0383166104de5760405162461bcd60e51b815260206004820152602f60248201527f636f6c6c65637461626c652d647573742f63616e742d73656e642d647573742d60448201526e746f2d7a65726f2d6164647265737360881b6064820152608401610275565b6104e9600283610af4565b1561054d5760405162461bcd60e51b815260206004820152602e60248201527f636f6c6c65637461626c652d647573742f746f6b656e2d69732d706172742d6f60448201526d198b5d1a194b5c1c9bdd1bd8dbdb60921b6064820152608401610275565b6001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156105ae576040516001600160a01b0384169082156108fc029083906000818181858888f193505050501580156105a8573d6000803e3d6000fd5b506105c2565b6105c26001600160a01b0383168483610b19565b604080516001600160a01b038086168252841660208201529081018290527f1e34c1aee8e83c2dcc14c21bb4bfeea7f46c0c998cb797ac7cc4d7a18f5c656b9060600160405180910390a1505050565b6001600160a01b0385166106605760405162461bcd60e51b8152602060048201526015602482015274537761707065723a207a65726f206164647265737360581b6044820152606401610275565b6001600160a01b0384161580159061068057506001600160a01b03831615155b6106c45760405162461bcd60e51b8152602060048201526015602482015274537761707065723a207a65726f206164647265737360581b6044820152606401610275565b6000821161070b5760405162461bcd60e51b815260206004820152601460248201527314ddd85c1c195c8e881e995c9bc8185b5bdd5b9d60621b6044820152606401610275565b600081116107545760405162461bcd60e51b8152602060048201526016602482015275537761707065723a207a65726f20736c69707061676560501b6044820152606401610275565b5050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526107c69085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610b49565b50505050565b60008080806107de8560048189611399565b8101906107eb9190611083565b9250925092508a6001600160a01b031682606001516001600160a01b031614801561082b5750896001600160a01b031682600001516001600160a01b0316145b801561084c5750886001600160a01b031682602001516001600160a01b0316145b801561085b5750878260800151145b801561086b575060048260c00151145b6108c35760405162461bcd60e51b815260206004820152602360248201527f537761707065723a20696e636f7272656374207377617020696e666f726d617460448201526234b7b760e91b6064820152608401610275565b6108f86001600160a01b038b167f00000000000000000000000000000000000000000000000000000000000000006000610c1b565b61092c6001600160a01b038b167f00000000000000000000000000000000000000000000000000000000000000008a610c1b565b604051623e012960e91b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637c0252009061097b90869086908690600401611271565b6040805180830381600087803b15801561099457600080fd5b505af11580156109a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cc919061119d565b509b9a5050505050505050505050565b60018054600080546001600160a01b03199081166001600160a01b0384161782559091169091556040517f7880f0fcc848e1f26e461654b100a69f8d0641e29aa29f6596c6afadbb36b5ea9190a1565b6001600160a01b038116610aa05760405162461bcd60e51b815260206004820152603560248201527f676f7665726e61626c652f70656e64696e672d676f7665726e6f722d73686f756044820152746c642d6e6f742d62652d7a65726f2d61646472657360581b6064820152608401610275565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f56bddfa0cee9697cebddf9acd7f23dc6583663b05e007b877056d05017994def9060200160405180910390a150565b6001600160a01b038116600090815260018301602052604081205415155b9392505050565b6040516001600160a01b03831660248201526044810182905261028990849063a9059cbb60e01b9060640161078f565b6000610b9e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610d3f9092919063ffffffff16565b8051909150156102895780806020019051810190610bbc9190611063565b6102895760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610275565b801580610ca45750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015610c6a57600080fd5b505afa158015610c7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca29190611185565b155b610d0f5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610275565b6040516001600160a01b03831660248201526044810182905261028990849063095ea7b360e01b9060640161078f565b6060610d4e8484600085610d56565b949350505050565b606082471015610db75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610275565b843b610e055760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610275565b600080866001600160a01b03168587604051610e2191906111ec565b60006040518083038185875af1925050503d8060008114610e5e576040519150601f19603f3d011682016040523d82523d6000602084013e610e63565b606091505b5091509150610e73828286610e7e565b979650505050505050565b60608315610e8d575081610b12565b825115610e9d5782518084602001fd5b8160405162461bcd60e51b8152600401610275919061135c565b8035610ec281611403565b919050565b600082601f830112610ed7578081fd5b813567ffffffffffffffff80821115610ef257610ef26113ed565b604051601f8301601f19908116603f01168101908282118183101715610f1a57610f1a6113ed565b81604052838152866020858801011115610f32578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215610f5f578081fd5b8135610b1281611403565b600080600080600080600060c0888a031215610f84578283fd5b8735610f8f81611403565b96506020880135610f9f81611403565b95506040880135610faf81611403565b9450606088013593506080880135925060a088013567ffffffffffffffff80821115610fd9578384fd5b818a0191508a601f830112610fec578384fd5b813581811115610ffa578485fd5b8b602082850101111561100b578485fd5b60208301945080935050505092959891949750929550565b600080600060608486031215611037578283fd5b833561104281611403565b9250602084013561105281611403565b929592945050506040919091013590565b600060208284031215611074578081fd5b81518015158114610b12578182fd5b600080600060608486031215611097578283fd5b83356110a281611403565b9250602084013567ffffffffffffffff808211156110be578384fd5b9085019061010082880312156110d2578384fd5b6110da61136f565b6110e383610eb7565b81526110f160208401610eb7565b602082015261110260408401610eb7565b604082015261111360608401610eb7565b60608201526080830135608082015260a083013560a082015260c083013560c082015260e083013582811115611147578586fd5b61115389828601610ec7565b60e0830152509350604086013591508082111561116e578283fd5b5061117b86828701610ec7565b9150509250925092565b600060208284031215611196578081fd5b5051919050565b600080604083850312156111af578182fd5b505080516020909101519092909150565b600081518084526111d88160208601602086016113c1565b601f01601f19169290920160200192915050565b600082516111fe8184602087016113c1565b9190910192915050565b6001600160a01b038981168252888116602083015287166040820152606081018690526080810185905260a0810184905260e060c0820181905281018290526000610100838582850137828401810191909152601f909201601f19160101979650505050505050565b6001600160a01b038481168252606060208084018290528551909216908301528301516000906112ac60808401826001600160a01b03169052565b5060408401516001600160a01b03811660a08401525060608401516001600160a01b03811660c084015250608084015160e083015260a0840151610100818185015260c086015161012085015260e0860151915080610140850152506113166101608401826111c0565b9050828103604084015261132a81856111c0565b9695505050505050565b602081016002831061135657634e487b7160e01b600052602160045260246000fd5b91905290565b602081526000610b1260208301846111c0565b604051610100810167ffffffffffffffff81118282101715611393576113936113ed565b60405290565b600080858511156113a8578182fd5b838611156113b4578182fd5b5050820193919092039150565b60005b838110156113dc5781810151838201526020016113c4565b838111156107c65750506000910152565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461046d57600080fdfea2646970667358221220922713db9a5cf9f2c62db7667a44e04555545cee04453c1fde04240781fbdceb64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 132,
        "contract": "contracts/swappers/async/OneInchAggregatorSwapper.sol:OneInchAggregatorSwapper",
        "label": "governor",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 135,
        "contract": "contracts/swappers/async/OneInchAggregatorSwapper.sol:OneInchAggregatorSwapper",
        "label": "pendingGovernor",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 21,
        "contract": "contracts/swappers/async/OneInchAggregatorSwapper.sol:OneInchAggregatorSwapper",
        "label": "protocolTokens",
        "offset": 0,
        "slot": "2",
        "type": "t_struct(AddressSet)2632_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(AddressSet)2632_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.AddressSet",
        "members": [
          {
            "astId": 2631,
            "contract": "contracts/swappers/async/OneInchAggregatorSwapper.sol:OneInchAggregatorSwapper",
            "label": "_inner",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Set)2361_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Set)2361_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.Set",
        "members": [
          {
            "astId": 2356,
            "contract": "contracts/swappers/async/OneInchAggregatorSwapper.sol:OneInchAggregatorSwapper",
            "label": "_values",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 2360,
            "contract": "contracts/swappers/async/OneInchAggregatorSwapper.sol:OneInchAggregatorSwapper",
            "label": "_indexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_uint256)"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}